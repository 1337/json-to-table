// Generated by CoffeeScript 1.4.0

/**
 * jsonTable.coffee v0.1
 *
 * 1337@github
 *
 * MIT
 *
*/


(function() {
  var jsonTable, objKeys, objsKeys, _base, _ref, _ref1,
    __hasProp = {}.hasOwnProperty;

  objKeys = function(obj) {
    var key, keys;
    keys = [];
    for (key in obj) {
      if (!__hasProp.call(obj, key)) continue;
      keys.push(key);
    }
    return keys;
  };

  objsKeys = function(objs) {
    var key, keys, obj, _i, _j, _len, _len1, _ref;
    keys = [];
    for (_i = 0, _len = objs.length; _i < _len; _i++) {
      obj = objs[_i];
      _ref = objKeys(obj);
      for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
        key = _ref[_j];
        if (keys.indexOf(key) === -1) {
          keys.push(key);
        }
      }
    }
    return keys;
  };

  jsonTable = function(json, opts) {
    var cell, cellValue, entry, frag, key, keys, row, subTable, table, thead, _i, _j, _k, _len, _len1, _len2;
    if (opts == null) {
      opts = {};
    }
    frag = document.createDocumentFragment();
    table = document.createElement('table');
    keys = opts.keys || objsKeys(json);
    console.log("keys: " + keys);
    thead = document.createElement('thead');
    row = document.createElement('tr');
    for (_i = 0, _len = keys.length; _i < _len; _i++) {
      key = keys[_i];
      cell = document.createElement('th');
      cell.textContent = key;
      row.appendChild(cell);
    }
    thead.appendChild(row);
    for (_j = 0, _len1 = json.length; _j < _len1; _j++) {
      entry = json[_j];
      row = document.createElement('tr');
      for (_k = 0, _len2 = keys.length; _k < _len2; _k++) {
        key = keys[_k];
        cell = document.createElement('td');
        cellValue = entry[key] || opts.emptyValue;
        if (typeof cellValue === 'object') {
          if (!(cellValue instanceof Array)) {
            cellValue = [cellValue];
          }
          console.log("sub-table");
          subTable = jsonTable(cellValue, opts);
          cell.appendChild(subTable);
          row.appendChild(cell);
        } else {
          cell.textContent = cellValue;
          row.appendChild(cell);
        }
      }
      table.appendChild(row);
    }
    table.appendChild(thead);
    frag.appendChild(table);
    return frag;
  };

  if ((_ref = window.ca) == null) {
    window.ca = {};
  }

  if ((_ref1 = (_base = window.ca).ohai) == null) {
    _base.ohai = {};
  }

  window.ca.ohai.jsonTable = jsonTable;

}).call(this);
